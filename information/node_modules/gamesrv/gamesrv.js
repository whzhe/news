var state=0;

function message_handle(message, client) {
    var msgStr = message.toString('ascii', 0, message.length-1);
    console.log("\r\n\r\n===========================");
    console.log("Get from APP:\r\n"+msgStr)
    console.log("--------------------------");
    console.log("Reply:");
    if (msgStr[0] != '{') { /*'{'*/
        switch(state) {
            case 1:
                senduser(msg, client);
                state++;
                //break;
            case 2:
                send_cards(msg, client);
                state++;
                //break;
            case 3:
                send_jiaodizhu(msg, client);
                state++;
                break;
            default:
                client.write(";");
        }
        return;
    }

    var msg = JSON.parse(msgStr);
    if (typeof(msg.c) == "undefined") {
        client.write(";");
        console.log("return: msg type is missing!");
        return;
    }
    
    if (msg.c == "fj") {
        //replyfastjoin(msg, client);
        /* 我先叫地主
        send_ksfangjian(msg, client);
        //state=1;
        state=10;
        senduser(msg, client);
        send_cards(msg, client);
        send_jiaodizhu(msg, client);*/
        send_ksfangjian(msg, client);
        state=10;
        senduser(msg, client);
        send_cards(msg, client);
        send_chupai1(msg, client);
        send_chupai2(msg, client);
    } else if (msg.c == "j") { //加入房间join
        send_ksfangjian(msg, client);
        state=10;
        senduser(msg, client);
        send_cards(msg, client);
        //send_jiaodizhu(msg, client);
        //send_jiaodizhuchenggong(msg, client);
        //send_chupai(msg, client);
        send_chupai1(msg, client);
        send_chupai2(msg, client);
    } else if (msg.c == "rd") { //ready
        send_cards(msg, client);
        //send_jiaodizhu(msg, client);
        send_chupai1(msg, client);
        send_chupai2(msg, client);
    } else if (msg.c == "g") { //客户端叫地主
        send_jiaodizhuchenggong(msg, client);
    } else if (msg.c == "p") { //客户端出牌
        send_chupai1(msg, client);
        send_chupai2(msg, client);
        send_end(msg, client);
        //send_cards(msg, client);
        //send_prepare(msg, client);
    } else if (msg.c == "dolk") {
        client.write(";");
    } else {
        client.write(";");
        console.log("unknown cmd: " + msg.c + "!");
    }
}
 
function send_ksfangjian(msg, client) {
    var ret = {
            m:"bab2f729d0354d9b",   //手机端唯一ID
            c:"routing",            // 返回的快速游戏房间信息
            d:"",                 //指令内容
            r:29,                 //随即数 防止数据缓存
            s:1,                  //消息序列
            t:1                   //打牌时    0:普通消息，1:打牌业务消息
    };
    var detail = {
            c:"1001",           // 房间编号
            hn:"test_room",     // 房间名称
            r:1,                // 房间倍数
            bp:100              // 房间每局底数
            /*
               u") private int unitType; // 交易单位 0 积分、1 豆
               l") private long limit = 0; // 允许进入的最低限制
               pw") private String password; // 房间密码
               ln") private int limitGroupNum = 0; // 每次参与游戏的人数
               cn") private long commissionNum; // 抽取的拥金数
               ht") private int homeType; // 0:普通房间/1:VIP/2:VIP包房/3:专场/4:钻石专场/5:合成挤专场/6:
               hc") private String hallCode; // 大厅编号
               up") private long upper; // 上限
               private int registFee; // 报名费
               private String explanation;// 环境说明
               s") private int sort; // 房间在大厅排序
               mc") private int maxCount; // 房间最大支持人数 0不限制
               v") private int version; // 房间版本号 版本号 有变化代表房间数据有更改，前台需要更新
               rh") private String resHall; // 大厅展示资源下载目录
               rhu") private String resHallUrl; // 大厅展示资源下载地址
               si") private String serverIp; // 游戏服务器IP
               gs") private String gameServer; // 游戏服务器地址（临时变量，不存储） 格式 192.168.0.1:8080
               rl") private String rule; // 专场游戏物品赠送规则
               sr") private String startRace; // 专场开始时间
               pt") private Integer playType; // 游戏比赛类型
               de") private String detail; // 游戏房间说明
               ma") private String maxAward; // 最大奖励
               pp") private Long prizePool; //奖金池金豆
               ro") private GameRoomRuleDetail roomDetail; // 游戏房间详细说明
               ra") private Integer raceType; // 比赛类型(1即时赛，2排位赛)
               rt") private int roomType; // 房间类型：0大厅房，1超快赛房，2排位赛房/6:挖矿场
             */
    };
    ret["d"] = JSON.stringify(detail);
    console.log(JSON.stringify(ret));
    client.write(JSON.stringify(ret)+";");
}

function send_prepare(msg, client) {
    var ret = {
            m:"bab2f729d0354d9b",   //手机端唯一ID
            c:"srd",                 // fast join
            d:"",                 //指令内容
            r:29,                 //随即数 防止数据缓存
            s:1,                  //消息序列
            t:1                   //打牌时    0:普通消息，1:打牌业务消息
    };
    var detail = {
            c:"1001",           // 房间编号
            hn:"test_room",     // 房间名称
            r:1,                // 房间倍数
            bp:100              // 房间每局底数
    };
    //ret["d"] = JSON.stringify(detail);
    console.log(JSON.stringify(ret));
    client.write(JSON.stringify(ret)+";");
}

function send_chupai(msg, client) {
    var ret = {
            m:"bab2f729d0354d9b",   //手机端唯一ID
            c:"cp",                 // fast join
            d:"",                 //指令内容
            r:29,                 //随即数 防止数据缓存
            s:1,                  //消息序列
            t:1                   //打牌时    0:普通消息，1:打牌业务消息
    };
    console.log(JSON.stringify(ret));
    client.write(JSON.stringify(ret)+";");
}

function send_cards(msg, client) {
    var ret = {
            m:"bab2f729d0354d9b",   //手机端唯一ID
            c:"s",                  //发牌
            d:"",                   //指令内容
            r:29,                   //随即数 防止数据缓存
            s:1,                    //消息序列
            t:1                     //打牌时    0:普通消息，1:打牌业务消息
    };
    var detail = {
        i:"123456", // 出牌人编号
        //ct:3, // 剩余的牌数
        cd:",0,1,2,3,4,5,6,7,8,9,10,11,12,17,30,43,", // 出的牌的json格式字符串
        o:2, // 游戏出牌顺序
        //cl:1, // 叫分
        //co:1, // 开始叫分的人位置
        //e:false, // 是否逃跑
        no:3,       // 下一个出牌人位置 
        gno:3,      // 局数
        zs:20,
        /*
           nm") 	private Map<Integer, String> nickMap; // 玩家名称
           r") 	private int ratio; //总倍数
           pm") 	private double payment = 0; // 每局支付多少 负数为输 正数为赢
           u") 	private int unitType = 0; // 类型 积分还是豆 0 积分、1 豆
           et") 	private double extract = 0; // 抽成
           gc") 	private int goodsCount = 0; // 物品赠送数量
           */
        m:2 // 庄家位置编号

            /*
           bo") private int bombRatio = 1;				//炸弹倍数(默认1)
           sr") private int springRatio = 1;				//春天倍数(默认1)
           dr") private int doubleRatio = 1;				//加倍倍数(默认1)
           b") private double bean = 0;					//最新所有金豆
           // 炸弹、春天、加倍、总倍数、底数、金豆、经验、当前金豆、等级
           iq") private Integer iq=0;						// 最新等级
           in") private Integer intellect=0 ;				// 最新经验
           ai") private Integer addIntellect=0;				// 输赢经验

           up") private boolean	upgrade;				//是否升级了
           ce") private String	celebratedText;			//庆祝文字
           ee") private String	celebratedEffect;		//庆祝效果

           br") private int baseRatio = 1;				//基础倍数(默认1)
           cr") private int callRatio = 1;				//叫分倍数(默认1)
           it")	private Integer isTitle; // 是否为称号:0=不是,1=是
        */
    };
    ret["d"] = JSON.stringify(detail);
    console.log(JSON.stringify(ret));
    client.write(JSON.stringify(ret)+";");
}

function senduser(msg, client) {
    var gameserverIp="192.168.1.101";
    var ret = {
            m:"bab2f729d0354d9b",   //手机端唯一ID
            c:"ui",                 //玩家资料
            d:"",                   //指令内容
            r:29,                 //随即数 防止数据缓存
            s:1,                  //消息序列
            t:1                   //打牌时    0:普通消息，1:打牌业务消息
    };
    var map = {};
    var user1={
                a:"", // 游戏账号
                ra:"",// 关联账号
                n:"",// 昵称
                t:0, // 玩家类型 0：一般玩家 1：机器人
                b:300000, //金豆
                gs:gameserverIp, // 所在游戏服务器
                cn:"", // 姓名
                p:"1234", // 账户密码
                mp:"81dc9bdb52d04dc20036dbd8313ed055", // 加密密码
                gd:"2", // 性别 0保密1女2男
                pn:"13999999999", // 联系号码
                e:"test@test.com", // email
                iup:"1", // 是否修改过密码0未修改过1已经修改过
                cd:"", // 创建时间
                ud:"", // 更新时间
                hi:"", // 头像
                so:1, // 用户排名
                ak:"", // 安全验证签名密钥
                rt:"", // 房间更新时间
                hw:0,// 已经赢[钻石挖矿场使用]
                jt:0,// 记牌器剩余有效时间(s)
                nw:0,// 需要赢
                ot:600, //比赛剩余秒数
                lt:"", // 游戏内部登录Token
                gt:1, // 当前玩的游戏类型 1：斗地主 2：麻将 3：锄大地
                ir:false, // 是否参加比赛 true:已参加 false:未参加
                rn:"rom1", // 房间名称
                round:0, // 轮次
                level:1, // 比赛阶段 1:预赛 2:决赛
                rank:2, // 用户排名
                cred:100, // 用户积分
                iq:0, // 等级等级
                //ii: private Map<String, String> iqImg; // 等级头像图标(0女地主,1男地主,2女农民,3男农民)
                tl:"title", // 称号
                in:10000, // 当前经验
                ni:10000, // 达到下一级等级所需经验
                //li:private Map<String, String> levelImg; // 等级图标(key:count,value:imagePath)
                dis:800, // 钻石的数量
                tpm:"no tipMes" // 无记牌器时的提示文本
    };
    var user2={
                a:"", // 游戏账号
                ra:"",// 关联账号
                n:"",// 昵称
                t:0, // 玩家类型 0：一般玩家 1：机器人
                b:300000, //金豆
                gs:gameserverIp, // 所在游戏服务器
                cn:"", // 姓名
                p:"1234", // 账户密码
                mp:"81dc9bdb52d04dc20036dbd8313ed055", // 加密密码
                gd:"2", // 性别 0保密1女2男
                pn:"13999999999", // 联系号码
                e:"test@test.com", // email
                iup:"1", // 是否修改过密码0未修改过1已经修改过
                cd:"", // 创建时间
                ud:"", // 更新时间
                hi:"", // 头像
                so:1, // 用户排名
                ak:"", // 安全验证签名密钥
                rt:"", // 房间更新时间
                hw:0,// 已经赢[钻石挖矿场使用]
                jt:0,// 记牌器剩余有效时间(s)
                nw:0,// 需要赢
                ot:600, //比赛剩余秒数
                lt:"", // 游戏内部登录Token
                gt:1, // 当前玩的游戏类型 1：斗地主 2：麻将 3：锄大地
                ir:false, // 是否参加比赛 true:已参加 false:未参加
                rn:"rom1", // 房间名称
                round:0, // 轮次
                level:1, // 比赛阶段 1:预赛 2:决赛
                rank:2, // 用户排名
                cred:100, // 用户积分
                iq:0, // 等级等级
                //ii: private Map<String, String> iqImg; // 等级头像图标(0女地主,1男地主,2女农民,3男农民)
                tl:"title", // 称号
                in:10000, // 当前经验
                ni:10000, // 达到下一级等级所需经验
                //li:private Map<String, String> levelImg; // 等级图标(key:count,value:imagePath)
                dis:800, // 钻石的数量
                tpm:"no tipMes" // 无记牌器时的提示文本
    };
    var user3={
                a:"", // 游戏账号
                ra:"",// 关联账号
                n:"",// 昵称
                t:0, // 玩家类型 0：一般玩家 1：机器人
                b:300000, //金豆
                gs:gameserverIp, // 所在游戏服务器
                cn:"", // 姓名
                p:"1234", // 账户密码
                mp:"81dc9bdb52d04dc20036dbd8313ed055", // 加密密码
                gd:"2", // 性别 0保密1女2男
                pn:"13999999999", // 联系号码
                e:"test@test.com", // email
                iup:"1", // 是否修改过密码0未修改过1已经修改过
                cd:"", // 创建时间
                ud:"", // 更新时间
                hi:"", // 头像
                so:1, // 用户排名
                ak:"", // 安全验证签名密钥
                rt:"", // 房间更新时间
                hw:0,// 已经赢[钻石挖矿场使用]
                jt:0,// 记牌器剩余有效时间(s)
                nw:0,// 需要赢
                ot:600, //比赛剩余秒数
                lt:"", // 游戏内部登录Token
                gt:1, // 当前玩的游戏类型 1：斗地主 2：麻将 3：锄大地
                ir:false, // 是否参加比赛 true:已参加 false:未参加
                rn:"rom1", // 房间名称
                round:0, // 轮次
                level:1, // 比赛阶段 1:预赛 2:决赛
                rank:2, // 用户排名
                cred:100, // 用户积分
                iq:0, // 等级等级
                //ii: private Map<String, String> iqImg; // 等级头像图标(0女地主,1男地主,2女农民,3男农民)
                tl:"title", // 称号
                in:10000, // 当前经验
                ni:10000, // 达到下一级等级所需经验
                //li:private Map<String, String> levelImg; // 等级图标(key:count,value:imagePath)
                dis:800, // 钻石的数量
                tpm:"no tipMes" // 无记牌器时的提示文本
    };

    user1["a"] = "111111";
    user1["ra"] = "111111";
    user1["n"] = "上家";
    user1["cn"] = "111111";
    map["1"] = user1;

    user2["a"] = "123456";
    user2["ra"] = "123456";
    user2["n"] = "我";
    user2["cn"] = "123456";
    map["2"] = user2;

    user3["a"] = "333333";
    user3["ra"] = "333333";
    user3["n"] = "下家";
    user3["cn"] = "333333";
    map["3"] = user3;
    //detail["map"][id] = user;
    //ret["d"] = JSON.stringify(detail);
    //ret["d"] = detail;
    ret["d"] = JSON.stringify(map);
    console.log(JSON.stringify(ret));
    client.write(JSON.stringify(ret)+";");    
}

function send_jiaodizhu(msg, client) {
    var ret = {
            m:"bab2f729d0354d9b",   //手机端唯一ID
            c:"g",                 // ready
            d:"",                 //指令内容
            r:29,                 //随即数 防止数据缓存
            s:1,                  //消息序列
            t:1                   //打牌时    0:普通消息，1:打牌业务消息
    };
    var detail = {
        //i:"111111",	 // 玩家ID
        i:"333333",	 // 玩家ID
        r:1,  //当前叫的倍数
        //l:",18,19,20", // 最后的底牌
        no:2, // 叫分人的位置
        m:1, // 地主位置
    };
    ret["d"] = JSON.stringify(detail);
    console.log(JSON.stringify(ret));
    client.write(JSON.stringify(ret)+";");
}

function send_jiaodizhuchenggong(msg, client) {
    var ret = {
            m:"bab2f729d0354d9b",   //手机端唯一ID
            c:"m",                 // ready
            d:"",                 //指令内容
            r:29,                 //随即数 防止数据缓存
            s:1,                  //消息序列
            t:1                   //打牌时    0:普通消息，1:打牌业务消息
    };
    var detail = {
        i:"123456",	 // 玩家ID
        r:3,  //当前叫的倍数
        l:",17,18,19,", // 最后的底牌
        no:2, // 叫分人的位置
        m:2, // 地主位置
    };
    ret["d"] = JSON.stringify(detail);
    console.log(JSON.stringify(ret));
    client.write(JSON.stringify(ret)+";");
}

/* 下家的出牌信息 */
function send_chupai1(msg, client) {
    var ret = {
            m:"bab2f729d0354d9b",   //手机端唯一ID
            c:"p",                  //出牌
            d:"",                   //指令内容
            r:29,                   //随即数 防止数据缓存
            s:1,                    //消息序列
            t:1                     //打牌时    0:普通消息，1:打牌业务消息
    };
    var detail = {
        i:"333333",     // 出牌人编号
        ct:16,          // 剩余的牌数
        cd:",41,",      // 出的牌的json格式字符串
        //o:2, // 游戏出牌顺序
        //cl:1, // 叫分
        //co:1, // 开始叫分的人位置
        //e:false, // 是否逃跑
        no:1,           // 下一个出牌人位置 
    };
    ret["d"] = JSON.stringify(detail);
    console.log(JSON.stringify(ret));
    client.write(JSON.stringify(ret)+";");
}

/* 下下家（上家）的出牌信息 */
function send_chupai2(msg, client) {
    var ret = {
            m:"bab2f729d0354d9b",   //手机端唯一ID
            c:"p",                  //出牌
            d:"",                   //指令内容
            r:29,                   //随即数 防止数据缓存
            s:1,                    //消息序列
            t:1                     //打牌时    0:普通消息，1:打牌业务消息
    };
    var detail = {
        i:"111111",     // 出牌人编号
        ct:16,          // 剩余的牌数
        //cd:",32,",      // 出的牌的json格式字符串
        cd:",19,32,45,18,31,",      // 出的牌的json格式字符串
        //o:2, // 游戏出牌顺序
        //cl:1, // 叫分
        //co:1, // 开始叫分的人位置
        //e:false, // 是否逃跑
        no:2,           // 下一个出牌人位置 
    };
    ret["d"] = JSON.stringify(detail);
    console.log(JSON.stringify(ret));
    client.write(JSON.stringify(ret)+";");
}

/* 本局结束 */
function send_end(msg, client) {
    var ret = {
            m:"bab2f729d0354d9b",   //手机端唯一ID
            c:"e",                  //出牌
            d:"",                   //指令内容
            r:29,                   //随即数 防止数据缓存
            s:1,                    //消息序列
            t:1                     //打牌时    0:普通消息，1:打牌业务消息
    };
    var detail = [
        {
            i:"111111",         // 出牌人编号
            ct:2,               // 剩余的牌数
            cd:",31,32,",       // 出的牌的json格式字符串
            o:1,                // 游戏出牌顺序
            cl:false,           // 叫分
            e:false,            // 是否逃跑
            nm:{1:"上家",2:"我",3:"下家"},  // 玩家名称
            pm:-100,            // 每局支付多少 负数为输 正数为赢
            ai:-10              // 输赢经验
        },
        {
            i:"123456",         // 出牌人编号
            ct:0,               // 剩余的牌数
            cd:",53,",          // 出的牌的json格式字符串
            o:2,                // 游戏出牌顺序
            cl:true,            // 叫分
            e:false,
            nm:{1:"上家",2:"我",3:"下家"},  // 玩家名称
            pm:200,             // 每局支付多少 负数为输 正数为赢
            ai:20               // 输赢经验
        },
        {
            i:"333333",         // 出牌人编号
            ct:3,               // 剩余的牌数
            cd:",42,42,43,",    // 出的牌的json格式字符串
            o:3,                // 游戏出牌顺序
            cl:false,           // 叫分
            e:false,
            nm:{1:"上家",2:"我",3:"下家"},  // 玩家名称
            pm:-100,            // 每局支付多少 负数为输 正数为赢
            ai:-10              // 输赢经验
        }
    ];
    var nm = {
    };
    //detail[1]["nm"] = JSON.stringify(nm);
    nm["0"] = "上家";
    nm["1"] = "我";
    nm["2"] = "下家";
    //detail[1]["nm"] = JSON.stringify(nm);
    ret["d"] = JSON.stringify(detail);
    console.log(JSON.stringify(ret));
    client.write(JSON.stringify(ret)+";");
}
module.exports.message_handle = message_handle;
